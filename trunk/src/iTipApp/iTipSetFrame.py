#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Thu Nov 27 16:46:38 2008


#   Programmer: xsmile
#   E-mail:     xsmile117@gmail.com
#
#
#   Distributed under the terms of the GPL (GNU Public License)
#
#   iTip is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

import wx
import iTipApp
import random
# begin wxGlade: extracode
# end wxGlade



class iTipSetDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: iTipSetDialog.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.sizer1_staticbox = wx.StaticBox(self, -1, u"醒目颜色")
        self.label_1 = wx.StaticText(self, -1, u"自定义色彩")
        self.colourbutton = wx.Button(self, -1, "")
        self.colourCheck = wx.CheckBox(self, -1, u"随机色彩")
        self.soundCheck = wx.CheckBox(self, -1, u"开启声音效果")
        self.openCheck = wx.CheckBox(self, -1, u"启动时打开上次未关闭的便笺")
        self.setOk = wx.Button(self, -1, u"设置")
        
        self.isColourRandom=iTipApp.isiTipColourRandom
        self.isSoundOn=iTipApp.isiTipSoundOn
        self.isOpenOn=iTipApp.isiTipOpenOn
        self.MarkColour=iTipApp.iColour

        self.__set_properties()
        self.__do_layout()
        self.ViewSet()

        self.Bind(wx.EVT_BUTTON, self.ChangeColour, self.colourbutton)
        self.Bind(wx.EVT_CHECKBOX, self.CheckRandom, self.colourCheck)
        self.Bind(wx.EVT_CHECKBOX, self.CheckSound, self.soundCheck)
        self.Bind(wx.EVT_CHECKBOX, self.CheckOpen, self.openCheck)
        self.Bind(wx.EVT_BUTTON, self.SetOk, self.setOk)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: iTipSetDialog.__set_properties
        self.SetTitle(u"设置")
        self.colourbutton.SetMinSize((30, 30))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: iTipSetDialog.__do_layout
        sizer = wx.BoxSizer(wx.VERTICAL)
        sizer2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer1 = wx.StaticBoxSizer(self.sizer1_staticbox, wx.HORIZONTAL)
        sizer1.Add(self.label_1, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer1.Add(self.colourbutton, 0, 0, 0)
        sizer1.Add(self.colourCheck, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 10)
        sizer.Add(sizer1, 0, wx.ALL|wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL, 5)
        sizer.Add(self.soundCheck, 0, wx.LEFT|wx.RIGHT|wx.TOP|wx.EXPAND, 10)
        sizer.Add(self.openCheck, 0, wx.ALL|wx.EXPAND, 10)
        sizer2.Add(self.setOk, 0, wx.BOTTOM|wx.ALIGN_CENTER_VERTICAL, 10)
        sizer.Add(sizer2, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        self.SetSizer(sizer)
        sizer.Fit(self)
        self.Layout()
        # end wxGlade

    def ChangeColour(self, event): # wxGlade: iTipSetDialog.<event_handler>
        dlg=wx.ColourDialog(self)
        if dlg.ShowModal() == wx.ID_OK:
            data = dlg.GetColourData()
            self.colourbutton.SetBackgroundColour(data.GetColour())
            self.MarkColour=data.GetColour()
        dlg.Destroy()

    def CheckRandom(self, event): # wxGlade: iTipSetDialog.<event_handler>
        if self.colourCheck.IsChecked()==1:
            self.isColourRandom=True
            self.colourbutton.Disable()
        else:
            self.isColourRandom=False
            self.colourbutton.Enable()

    def CheckSound(self, event): # wxGlade: iTipSetDialog.<event_handler>
        if self.soundCheck.IsChecked()==1:
            self.isSoundOn=True
        else:
            self.isSoundOn=False

    def CheckOpen(self, event): # wxGlade: iTipSetDialog.<event_handler>
        if self.openCheck.IsChecked()==1:
            self.isOpenOn=True
        else:
            self.isOpenOn=False
            
            
    def SetOk(self, event): # wxGlade: iTipSetDialog.<event_handler>
        if self.isColourRandom:
            iTipApp.isiTipColourRandom=True
            self.RefreshMark()
        else:
            iTipApp.iColour=self.MarkColour
            iTipApp.isiTipColourRandom=False
            self.RefreshMark()
        iTipApp.isiTipSoundOn=self.isSoundOn
        iTipApp.isiTipOpenOn=self.isOpenOn
        self.Destroy()
        
        
    def ViewSet(self):
        self.colourbutton.SetBackgroundColour(self.MarkColour)
        if self.isSoundOn:
            self.soundCheck.SetValue(1)
        else:
            self.soundCheck.SetValue(0)
        if self.isOpenOn:
            self.openCheck.SetValue(1)
        else:
            self.openCheck.SetValue(0)
        if self.isColourRandom:
            self.colourCheck.SetValue(1)
            self.colourbutton.Disable()
        else:
            self.colourCheck.SetValue(0)
            self.colourbutton.Enable()
    
    def RefreshMark(self):
        for iTip in iTipApp.iTipAll:
            iTipShow=wx.FindWindowById(iTip.id)
            if iTipShow!=None:
                iTipColour=iTipApp.iTipMarkColour()
                iTipShow.backcolour=iTipColour
                if  iTipShow.IsShown() and iTipShow.isiTipMark:
                    iTipShow.MarkiTip(iTipColour)
                

# end of class iTipSetDialog
