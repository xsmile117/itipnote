# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Sun Nov 23 23:07:01 2008

#   Programmer: xsmile
#   E-mail:     xsmile117@gmail.com
#
#
#   Distributed under the terms of the GPL (GNU Public License)
#
#   iTip is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

import wx
import datetime
import wx.lib.masked           as masked

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode

# end wxGlade

class AlarmSet(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: AlarmSet.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.sizer1_staticbox = wx.StaticBox(self, -1, u"时间设置")
        self.datepicker = wx.DatePickerCtrl(self, -1,style=wx.DP_DROPDOWN | wx.DP_SHOWCENTURY)
        self.time24 = masked.TimeCtrl(
                        self, -1, name="24 hour control", fmt24hr=True,
                        display_seconds = False
                        )
        self.time24.SetLabel(':'.join((self.GetParent().hour,self.GetParent().min)))
        h=self.time24.GetSize().height
        self.spin = wx.SpinButton( self, -1, wx.DefaultPosition, (-1,h), wx.SP_VERTICAL )
        self.time24.BindSpinButton(self.spin)
        self.D = wx.StaticText(self, -1, u"日")
        self.M = wx.StaticText(self, -1, u"分")
        self.ok = wx.Button(self, -1, u"确定")
        self.cancel = wx.Button(self, -1, u"取消")

        self.__set_properties()
        self.__do_layout()
        
        self.SetTime()
        
        self.Bind(wx.EVT_BUTTON, self.OniTipSetAlarm, self.ok)
        self.Bind(wx.EVT_BUTTON, self.OnClose, self.cancel)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: AlarmSet.__set_properties
        self.SetTitle(u"提醒")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: AlarmSet.__do_layout
        sizer = wx.BoxSizer(wx.VERTICAL)
        grid_sizer = wx.GridSizer(1, 2, 0, 0)
        sizer1 = wx.StaticBoxSizer(self.sizer1_staticbox, wx.HORIZONTAL)
        sizer1.Add(self.datepicker, 0, 0, 0)
        sizer1.Add(self.D, 0, wx.TOP, 5)
        sizer1.Add(self.time24, 0, 0, 18)
        sizer1.Add(self.spin, 0, 0, 0)
        sizer1.Add(self.M, 0, wx.TOP, 5)
        sizer.Add(sizer1, 0, wx.ALL|wx.EXPAND, 5)
        grid_sizer.Add(self.ok, 0, wx.BOTTOM|wx.ALIGN_CENTER_HORIZONTAL, 5)
        grid_sizer.Add(self.cancel, 0, wx.BOTTOM|wx.ALIGN_CENTER_HORIZONTAL, 5)
        sizer.Add(grid_sizer, 0, wx.EXPAND, 0)
        self.SetSizer(sizer)
        sizer.Fit(self)
        self.Layout()
        # end wxGlade
    
    def OniTipSetAlarm(self,event):
        parent=self.GetParent()
        parent.date=self.datepicker.LabelText
        parent.hour,parent.min=self.time24.GetValue().split(':')
        self.Destroy()
        
    def OnClose(self,event):
        self.Destroy()
        
        
    def SetTime(self):
        y,m,d=self.GetParent().date.split('-')
        at=wx.DateTime()
        self.datepicker.SetValue(at.Set(int(d),int(m)-1,int(y)))
        
# end of class AlarmSet
